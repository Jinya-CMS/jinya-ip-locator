stages:
  - test
  - build

test:
  image: harbor.ulbricht.casa/proxy/library/golang:1.21-alpine
  stage: test
  script:
    - go vet .
    - go build -o jinya-ip-locator

docker-build:
  image: harbor.ulbricht.casa/proxy/library/docker:dind
  stage: build
  before_script:
    - docker login -u "$HARBOR_USER" -p "$HARBOR_PASSWORD" harbor.ulbricht.casa
  script:
    - docker build --pull -t "harbor.ulbricht.casa/jinya/jinya-ip-locator:1.0.${CI_PIPELINE_IID}" -f ./Dockerfile .
    - docker tag "harbor.ulbricht.casa/jinya/jinya-ip-locator:1.0.${CI_PIPELINE_IID}" "harbor.ulbricht.casa/jinya/jinya-ip-locator:latest"
    - docker push "harbor.ulbricht.casa/jinya/jinya-ip-locator:1.0.${CI_PIPELINE_IID}"
    - docker push "harbor.ulbricht.casa/jinya/jinya-ip-locator:latest"
  rules:
    - if: $CI_COMMIT_BRANCH == "v1"
      exists:
        - Dockerfile

binary-build-linux:
  image: harbor.ulbricht.casa/proxy/library/golang:1.21-alpine
  stage: build
  script:
    - go build -o jinya-ip-locator
  artifacts:
    paths:
      - jinya-ip-locator
  rules:
    - if: $CI_COMMIT_BRANCH == "v1"

binary-build-windows:
  image: harbor.ulbricht.casa/proxy/library/golang:1.21-alpine
  stage: build
  variables:
    GOOS: windows 
  script:
    - go build -o jinya-ip-locator.exe
  artifacts:
    paths:
      - jinya-ip-locator.exe
  rules:
    - if: $CI_COMMIT_BRANCH == "v1"